// Import.
const assert = require('assert');
const CColor = require('ccolor');
const saltedMd5 = require('./index');

// Test data.
const testDataList = [
  { data: 'Some data.', salt: undefined, correctResult: '069972bd107688743d20a177a701490f' },
  { data: 'Some data.', salt: '', correctResult: '069972bd107688743d20a177a701490f' },
  { data: 'Some data.', salt: 'SUPER-S@LT!', correctResult: '1b25469a2e4b157f02dd1fea3b5f1e9a' },
  { data: undefined, salt: 'SUPER-S@LT!', correctResult: '8dcf756d53138e51b5b7355b04b8f2ad' },
  { data: '', salt: 'SUPER-S@LT!', correctResult: '8dcf756d53138e51b5b7355b04b8f2ad' }
];

// Define colors.
const { green, red } = CColor;

// Start async thread.
(async () => {
  let testNumberIterator = 1;
  for (const testData of testDataList) {
    // Define current test data.
    const { data, salt, correctResult } = testData;

    // Sync test.
    const saltedHash = saltedMd5(data, salt);
    assert.equal(saltedHash, correctResult, red(`Sync test ${testNumberIterator}: Wrong hash.`));
    console.log(green(`Sync test ${testNumberIterator}: Passed!`));

    // Async test.
    const asyncSaltedHash = await saltedMd5(data, salt, true);
    assert.equal(asyncSaltedHash, correctResult, red(`Async test ${testNumberIterator}: Wrong hash.`));
    console.log(green(`Async test ${testNumberIterator}: Passed!`));

    // Increment test number.
    testNumberIterator++;
  }
})();
